!!!<div class="banner-image"><img alt="Yaksha Programming Language" src="images/yk-banner.png" style="max-width: 100%;" /></div>
---
# Introduction
---
Yaksha â€“ A manual memory managed, compiled to C99, programming language with python like syntax.
;Please note this is an in progress project. Very early days.
---
## Philosophy
---
Language syntax is minimalistic and looks like Python in most cases. Manual memory management is required. 
New developer should be able to pick up full syntax in few hours.
; However, this is not compatible with Python nor a subset of Python.
---
### End Users
---
Yaksha aims to be a simple general purpose language with a minimalistic standard library. One goal is to have easy access to GPU/parallel programming (this is not started yet) using OpenCL.
There will be first class support for Windows. At the moment author plan on using the language (once it reaches usable level) in personal projects.
;This is a single person project, so any advice, pull-requests/issues, fixes to documentation grammar errors, fixes to spelling errors, well wishes, constructive criticism and/or any other kind of help is welcome.
---
## Sample Programs
---
### Factorial
---
```yaksha
import libs.console

def factorial(x: int) -> int:
    if x <= 0:
        return 1
    return x * factorial(x - 1)


def main() -> int:
    a: int = 0
    while a < 10:
        console.cyan("factorial")
        console.red("(")
        print(a)
        console.red(") = ")
        println(factorial(a))
        a = a + 1
    return 0
```
#### Output
!!!<div class="banner-image"><img alt="Factorial 0 - 9 output screenshot" src="images/yk-sample1.png" style="max-width: 100%;" /></div>
;This simple program demonstrate calculating factorial inefficiently using recursion and adding a prefix to a string.
---
---